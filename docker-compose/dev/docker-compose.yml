version: '3.8'

services:
  frontend:
    image: razzak2007/plateforme-autoecole-frontend:latest
    restart: always
    container_name: plateforme-frontend
    ports:
      - "4200:4200"
    depends_on:
      - user-service
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - app-network

  user-service:
    image: razzak2007/plateforme-autoecole-user-service:latest
    restart: always
    container_name: plateforme-user-service
    ports:
      - "3001:3001"
    environment:
      SPRING_DATASOURCE_URL_USER_SERVICE: jdbc:postgresql://db:5432/autoecole
      SPRING_POSTGRES_USERNAME: postgres
      SPRING_POSTGRES_PASSWORD: postgres
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8071/"
      SPRING_PROFILES_ACTIVE: dev
      SPRING_APPLICATION_NAME: user-service
    depends_on:
      config-server:
        condition: service_healthy
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - app-network

  config-server:
    image: razzak2007/plateforme-autoecole-config-server:latest
    restart: always
    container_name: plateforme-config-server
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: plateforme-rabbitmq
    ports:
      - "5672:5672"      # Port pour les connexions des applications
      - "15672:15672"    # Interface de gestion (UI)
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network


  db:
    image: postgres:latest
    container_name: plateforme-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: autoecole
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
